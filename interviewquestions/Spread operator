# spread operator
### The spread operator in JavaScript is denoted by three consecutive dots ... and is used primarily for two purposes:

Expanding arrays or iterable objects: It allows an iterable (like an array or string) to be expanded where zero or more arguments (for function calls) or elements (for array literals) are expected.

Copying properties from one object to another: It can be used to create a shallow copy of an object or merge multiple objects into one.

#### Here are examples illustrating both uses:

1. Expanding arrays or iterable objects:

````
   // Example 1: Combining arrays
const arr1 = [1, 2, 3];
const arr2 = [4, 5, 6];

const combinedArray = [...arr1, ...arr2]; // [1, 2, 3, 4, 5, 6]

// Example 2: Passing array elements as function arguments
function sum(a, b, c) {
 return a + b + c;
}

const numbers = [1, 2, 3];
const result = sum(...numbers); // Equivalent to sum(1, 2, 3), returns 6
````

```
// Example 1: Creating a shallow copy of an object
const obj1 = { name: "John", age: 30 };
const obj2 = { ...obj1 }; // Creates a new object with the same properties

// Example 2: Merging objects
const defaults = { width: 100, height: 100 };
const customSettings = { color: "blue" };

const mergedSettings = { ...defaults, ...customSettings }; // Merged object: { width: 100, height: 100, color: 'blue' }
```

In both examples, the spread operator ... effectively spreads the elements or properties of the iterables or objects, respectively. This operator is particularly useful for manipulating arrays and objects in a concise and expressive manner.
